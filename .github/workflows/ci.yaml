name: CI

on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"
  schedule:
    # Nightly Tests
    - cron: "0 0 * * *"

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8]
    env:
      CI_OS: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - name: Additional info about the build
        shell: bash
        run: |
          uname -a
          df -h
          ulimit -a
      - name: Create environment for package
        shell: bash
        run: |
          . devtools/scripts/initialize_conda.sh
          conda info
          python devtools/scripts/create_conda_env.py -n=test -p=${{ matrix.python-version }} devtools/conda-envs/test_env.yaml
      - name: Install package
        shell: bash
        run: |
          . devtools/scripts/initialize_conda.sh
          python -m pip install . --no-deps
          conda list
      - name: Run tests
        shell: bash
        run: |
          . devtools/scripts/initialize_conda.sh
          pytest -v --cov=kinoml --cov-report=xml --color=yes kinoml/tests/
      - name: CodeCov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          yml: ./.codecov.yml

  lint-format:
    runs-on: ubuntu-18.04
    env:
      CI_OS: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2
      - name: Install linter and formatter
        shell: bash
        run: |
          . devtools/github-actions/initialize_conda.sh
          conda activate
          python devtools/scripts/create_conda_env.py -n=test -p=${{ matrix.python-version }}  devtools/conda-envs/test_env.yaml
          conda activate test
          conda install pylint black
      - name: Run pylint
        shell: bash
        run: |
          . devtools/github-actions/initialize_conda.sh
          conda activate test
          pylint kinoml/
      - name: Run black check
        shell: bash
        if: always()
        run: |
          . devtools/github-actions/initialize_conda.sh
          conda activate test
          black --check -l 99 kinoml/

  mkdocs:
    runs-on: ubuntu-18.04
    env:
      CI_OS: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2
      - name: Create environment for package
        shell: bash
        run: |
          . devtools/scripts/initialize_conda.sh
          conda activate
          python devtools/scripts/create_conda_env.py -n=docs -p=3.7 devtools/conda-envs/test_env.yaml
          conda activate docs
          python -m pip install . --no-deps

      - name: Build docs
        shell: bash
        run: |
          . devtools/scripts/initialize_conda.sh
          conda activate docs
          # Required to load docstrings sample module inside docs/
          export PYTHONPATH=$(pwd)
          mkdocs build

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
        # We want to test docs building in PR, but we we
        # will only deploy if we are on / have merged to master
        # Whitelist api for PR #8
        if: github.ref == 'master' || github.head_ref == 'api'
